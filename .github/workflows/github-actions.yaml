name: GCP Sandbox request

on:
  workflow_dispatch:
    inputs:
      USER_EMAIL:
        description: "Email of user"
        required: true
        type: string
        default: "vishal.kapse@cldcvr.com"
      PERMISION_SET:
        description: "Access role for user"
        type: choice
        options:
          - ADMINISTRATOR
          - READ_ONLY
        required: true
      DURATION:
        description: "Select the duration of access required in hours "
        type: choice
        required: true
        options:
          - 1 Hours
          - 2 Hours
          - 4 Hours
          - 8 Hours
          - 16 Hours
          - 40 Hours
      PURPOSE:
        description: "Short description"
        type: string
      SUPPORT_TICKET:
        description: "Paste the support ticket url here"
        type: string
        required: true

jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      #    - uses: 'actions/checkout@v1'
      #    - id: 'auth'
      #      uses: 'google-github-actions/auth@v1'
      #      with:
      #        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      #
      #    - name: 'Set up Cloud SDK'
      #      uses: 'google-github-actions/setup-gcloud@v1'
      #
      #    - name: 'Use gcloud CLI'
      #      run: 'gcloud info'
      #
      #
      #    - name: 'Create GCP Project'
      #      run: | 
      #        PROJECT_NAME="$(echo ${{ inputs.USER_EMAIL  }} | cut -d'@' -f1)-sandbox-project" 
      #        gcloud projects create $PROJECT_NAME --folder=${{ secrets.FOLDER_ID }}
      #
      #    - name: 'Grant user IAM access by adding to Sandbox-Users Group'
      #      run: 'gcloud identity groups memberships add --group-email=sandbox-users@cloudpoet.in --member-email=${{ inputs.USER_EMAIL }}'
      #
    - name: "Create project name unique per user"
      run: echo "PROJECT_NAME=$(echo ${{ inputs.USER_EMAIL}} | cut -d'@' -f1)-sandbox-project" >> $GITHUB_ENV
    - name: "Extract numeric duration in hours"
      run: echo "HOUR_DURATION=$(echo '${{ inputs.DURATION  }}' | cut -d' ' -f1)" >> $GITHUB_ENV
    - name: "Create expiry timestamp"
      run: echo "DATE_PARAM='-v+${{ env.HOUR_DURATION  }}H'" >> $GITHUB_ENV

      
    - name: test
      run: echo $PROJECT_NAME && echo $HOUR_DURATION && echo $DATE_PARAM

    - name: 'Create cleanup and deletion task on GCP Cloud Tasks scheduled exactly at expiry duration'
      run: |
        PROJECT_NAME=$(echo ${{ inputs.USER_EMAIL  }} | cut -d'@' -f1)-sandbox-project
        PAYLOAD='{"email": "${{ inputs.USER_EMAIL  }}", "project" : "$PROJECT_NAME"}'
        echo $PAYLOAD
        #gcloud tasks create-http-task testdump1 --queue=sandbox-project-deletion-triggers --url=https://ptsv2.com/t/q1zof-1668273128/post  --location=us-west1 --method=POST --schedule-time=$(date -v+5M -u +"%Y-%m-%dT%H:%M:%SZ") --body-content={"my":"data"}
