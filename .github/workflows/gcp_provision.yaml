name: GCP Sandbox provisioning

on:
  workflow_dispatch:
    inputs:
      USER_EMAIL:
        description: "Email of user"
        required: true
        type: string
      PERMISION_SET:
        description: "Access role for user"
        type: choice
        options:
          - ADMINISTRATOR
          - READ_ONLY
        required: true
      DURATION:
        description: "Select the duration of access required in hours "
        type: choice
        required: true
        options:
          - 1 Minutes
          - 1 Hours
          - 2 Hours
          - 4 Hours
          - 8 Hours
          - 16 Hours
          - 40 Hours
      PURPOSE:
        description: "Short description"
        type: string
      SUPPORT_TICKET:
        description: "Paste the support ticket url here"
        type: string
        required: true

jobs:
  provisioning_gcp_project:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: 'actions/checkout@v1'
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider:  ${{ secrets.WIF_IDP_POOL }}
        service_account:  "sandbox-master@sandbox-master-prj.iam.gserviceaccount.com"
        # project_id: ${{ secrets.SANDBOX_MASTER_PROJECT }}
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: "Generate a variable for project name unique per user"
      run: echo "PROJECT_NAME=$(echo ${{ inputs.USER_EMAIL  }} | cut -d'@' -f1)-$(date +%s)" >> $GITHUB_ENV

    - name: "Generate expiry timestamp from the duration from inputs"
      run: echo "EXPIRES_AT=$(date --date='${{ inputs.DURATION  }}' +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
    
    - name: "test auth"
      run: gcloud auth list

    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "payload.json"
        json: '{"request_duration":"${{ inputs.DURATION  }}","event_type":"sandbox-provision"}'
        dir: "/"

    - name: "Invoke gcloud function"
      run: gcloud functions call gcp-sandbox-manager --data "$(cat ./payload.json)" --region asia-south1 --project "sandbox-master-prj"
    # - name: 'Alert on Slack about project creation status'
    #   uses: act10ns/slack@v1
    #   with:
    #     status: ${{ job.status }}
    #     config: .github/config/slack.yaml
    #   if: always()
