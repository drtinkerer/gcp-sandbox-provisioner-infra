name: GCP Sandbox provisioning

on:
  workflow_dispatch:
    inputs:
      USER_EMAIL:
        description: "Email of user"
        required: true
        type: string
      PERMISION_SET:
        description: "Access role for user"
        type: choice
        options:
          - ADMINISTRATOR
          - READ_ONLY
        required: true
      DURATION:
        description: "Select the duration of access required in hours "
        type: choice
        required: true
        options:
          - 1 Minutes
          - 1 Hours
          - 2 Hours
          - 4 Hours
          - 8 Hours
          - 16 Hours
          - 40 Hours
      PURPOSE:
        description: "Short description"
        type: string
      SUPPORT_TICKET:
        description: "Paste the support ticket url here"
        type: string
        required: true

jobs:
  provisioning_gcp_project:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: 'actions/checkout@v1'
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: "Generate a variable for project name unique per user"
      run: echo "PROJECT_NAME=$(echo ${{ inputs.USER_EMAIL  }} | cut -d'@' -f1)-$(date +%s)" >> $GITHUB_ENV

    - name: "Generate expiry timestamp from the duration from inputs"
      run: echo "EXPIRES_AT=$(date --date='${{ inputs.DURATION  }}' +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    - name: 'Create GCP Project and link it to Billing account'
      run: | 
        gcloud projects create $PROJECT_NAME --folder=${{ secrets.FOLDER_ID }}

    - name: 'Link newly created project to a Billing account'
      run: |
        gcloud components install beta
        gcloud beta billing projects link $PROJECT_NAME --billing-account ${{ secrets.BILLING_ACCOUNT_ID }} 

    - name: 'Grant user IAM access to newly created project'
      #run: gcloud identity groups memberships add --group-email=${{secrets.SANDBOX_GROUP_EMAIL}} --member-email=${{inputs.USER_EMAIL}}
      run: gcloud projects add-iam-policy-binding $PROJECT_NAME --member='user:${{inputs.USER_EMAIL}}' --role='roles/editor'



    - name: 'Create cleanup and deletion task on GCP Cloud Tasks scheduled exactly at expiry timestamp'
      run: |
        PAYLOAD='{"event_type":"gcp_nuke","client_payload":{"email":"${{inputs.USER_EMAIL}}","project":"${{env.PROJECT_NAME}}"}}'
        echo $PAYLOAD
        gcloud tasks create-http-task \
          --header="authorization:${{secrets.BEARER_TOKEN_GITHUB}}" \
          --queue=sandbox-project-deletion-triggers \
          --url=${{ secrets.SCHEDULER_URL }} \
          --location=us-west1 \
          --method=POST \
          --schedule-time=$EXPIRES_AT \
          --body-content=$PAYLOAD

    - name: 'Alert on Slack about project creation status'
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        config: .github/config/slack.yaml
      if: always()
